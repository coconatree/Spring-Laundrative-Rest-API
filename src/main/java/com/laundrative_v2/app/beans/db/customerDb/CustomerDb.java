package com.laundrative_v2.app.beans.db.customerDb;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.laundrative_v2.app.beans.json.customer.request.CustomerPostReq;
import lombok.*;

import javax.persistence.*;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;

@Entity
@Table(name = "musteri")
@Getter
@Setter
@ToString
@JsonIgnoreProperties
public class CustomerDb
{
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    @Column(name = "adi")
    private String name;

    @Column(name = "sifre")
    private String password;

    @Column(name = "telefon")
    private String telephone;
    @Column(name = "email")
    private String email;
    @Column(name = "olusturma_tarih")
    private Date creationDate;
    @Column(name = "guncellenme_tarih")
    private Date updateDate;
    @Column(name = "musteri_notu")
    private String customerNote;
    @Column(name = "indirim_tipi")
    private Integer discountType;
    @Column(name = "indirim_orani")
    private BigDecimal discountPercentage;

    @Column(name = "aktif")
    private Integer active;

    @Column(name = "secret_key")
    private String secretKey;

    public CustomerDb() {}

    public boolean isActive()
    {
        return this.active == 1;
    }

    public static CustomerDb from(CustomerPostReq request)
    {
        CustomerDb customer = new CustomerDb();

        customer.setName(request.getName());
        customer.setPassword(request.getPassword());
        customer.setTelephone(request.getTelephone());
        customer.setEmail(request.getEmail());
        customer.setCustomerNote(request.getNote());

        // Rest is generated by the API

        customer.setCreationDate(new Date(System.currentTimeMillis()));
        customer.setUpdateDate(null);
        customer.setDiscountType(0);
        customer.setDiscountPercentage(new BigDecimal(0.12));

        // Setting the customer as active

        customer.setActive(1);

        //TODO
        //Check this

        customer.setSecretKey("");

        return customer;
    }

    public static CustomerDb updateFrom(CustomerPostReq request, CustomerDb original, Long oldId)
    {
        original.setName(request.getName());
        original.setPassword(request.getPassword());
        original.setTelephone(request.getTelephone());
        original.setEmail(request.getEmail());
        original.setCustomerNote(request.getNote());

        original.setUpdateDate(new Date(System.currentTimeMillis()));
        original.setId(oldId);

        return original;
    }
}
